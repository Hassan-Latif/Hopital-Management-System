@model PaginatedList<Hospital_Management_System.Models.Rooms>;
@{
        ViewData["Title"] = "Index";
    }
<h1>Rooms</h1>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
    <div class="d-flex flex-row-reverse">
    <form asp-action="Index" method="get"  >
        <div class="form-actions no-color">
            <p>
                Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input class="btn btn-primary" type="submit" value="Search" class="btn btn-default" />|
                <a class="btn btn-secondary" asp-action="Index" >Back to Full List</a>
            </p>
        </div>
    </form>
    </div>

<table class="table">
    <thead>
            <tr>
                <th>
                    RoomId
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> RoomName</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> RoomTypeName</a>
                </th>
                <th>                                      
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> RoomCapacity</a>
                </th>
                <th>                                      
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> RoomDate</a>                </th>

            </tr>
    </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <th>
                    @Html.DisplayFor(modelItem => item.RoomId)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomCapacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomDate)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.RoomId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.RoomId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.RoomId">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>